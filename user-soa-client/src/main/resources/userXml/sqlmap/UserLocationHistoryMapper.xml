<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserLocationHistoryMapper">
	<resultMap id="BaseResultMap" type="com.hnair.consumer.user.model.UserLocationHistory">
		<id column="location_history_id" property="locationHistoryId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="location_date" property="locationDate" jdbcType="DATE" />
		<result column="city_id" property="cityId" jdbcType="BIGINT" />
		<result column="destination_id" property="destinationId" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="latitude" property="latitude" jdbcType="DOUBLE" />
		<result column="longtitude" property="longtitude" jdbcType="DOUBLE" />
	</resultMap>
	<sql id="Base_Where">
		<if test="locationHistoryId != null"> and location_history_id= #{locationHistoryId}</if>	
		<if test="userId != null"> and user_id= #{userId}</if>	
		<if test="locationDate != null"> and location_date= #{locationDate}</if>	
		<if test="cityId != null"> and city_id= #{cityId}</if>	
		<if test="destinationId != null"> and destination_id= #{destinationId}</if>	
		<if test="createTime != null"> and create_time= #{createTime}</if>	
		<if test="latitude != null"> and latitude= #{latitude}</if>	
		<if test="longtitude != null"> and longtitude= #{longtitude}</if>	
		<if test="locationDateMore != null"> and location_date &gt; #{locationDateMore}</if>
		<if test="locationDateLess != null"> and location_date &lt; #{locationDateLess}</if>
		<if test="userIdMore != null"> and user_id &gt; #{userIdMore}</if>	
	</sql>
	<sql id="Base_Column_List">
		location_history_id ,
		user_id ,
		location_date ,
		city_id ,
		destination_id ,
		create_time ,
		latitude ,
		longtitude 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_location_history
		where
		location_history_id = #{locationHistoryId,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_location_history
		where
		location_history_id = #{locationHistoryId,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.hnair.consumer.user.model.UserLocationHistory">
		insert into user_location_history
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="locationHistoryId != null">location_history_id,</if>	
			<if test="userId != null">user_id,</if>	
			<if test="locationDate != null">location_date,</if>	
			<if test="cityId != null">city_id,</if>	
			<if test="destinationId != null">destination_id,</if>	
			<if test="createTime != null">create_time,</if>	
			<if test="latitude != null">latitude,</if>	
			<if test="longtitude != null">longtitude,</if>	
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="locationHistoryId != null">
				#{locationHistoryId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="locationDate != null">
				#{locationDate,jdbcType=DATE},
			</if>
			<if test="cityId != null">
				#{cityId,jdbcType=BIGINT},
			</if>
			<if test="destinationId != null">
				#{destinationId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="latitude != null">
				#{latitude,jdbcType=DOUBLE},
			</if>
			<if test="longtitude != null">
				#{longtitude,jdbcType=DOUBLE},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.hnair.consumer.user.model.UserLocationHistory">
		update user_location_history
		<set>
			<if test="userId != null">
				user_id= #{userId,jdbcType=BIGINT},
			</if>
			<if test="locationDate != null">
				location_date= #{locationDate,jdbcType=DATE},
			</if>
			<if test="cityId != null">
				city_id= #{cityId,jdbcType=BIGINT},
			</if>
			<if test="destinationId != null">
				destination_id= #{destinationId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time= #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="latitude != null">
				latitude= #{latitude,jdbcType=DOUBLE},
			</if>
			<if test="longtitude != null">
				longtitude= #{longtitude,jdbcType=DOUBLE}
			</if>
		</set>
		where
		location_history_id = #{locationHistoryId,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from user_location_history where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from user_location_history where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from user_location_history where 1=1
		<include refid="Base_Where" />
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_location_history where location_history_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="selectLocationHistoryUserId" resultType="java.lang.Long">
		SELECT
			user_id
		FROM
			user_location_history h
		where 1=1
			<include refid="Base_Where" />
		GROUP BY
			user_id
		ORDER BY
			user_id asc 
		LIMIT #{pageSize}
	</select>
	
	
	<select id="selectUsualLocationByUserId" resultMap="BaseResultMap">
		SELECT
			user_id,
			destination_id
		FROM
			user_location_history h
		WHERE
			1=1
			<include refid="Base_Where" />
			and user_id IN 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		GROUP BY
			user_id,
			destination_id
		HAVING
			count(0) > 2
		ORDER BY
			COUNT(0) DESC,
			max(location_date) DESC
	</select>
	
	


</mapper>
