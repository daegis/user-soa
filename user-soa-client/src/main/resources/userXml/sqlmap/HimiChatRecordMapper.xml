<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="HimiChatRecordMapper">
	<resultMap id="BaseResultMap" type="com.hnair.consumer.user.model.HimiChatRecord">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="u_id" property="uid" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="user_flag" property="userFlag" jdbcType="INTEGER" />
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="is_delete" property="isDelete" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Where">
		<if test="id != null"> and id= #{id}</if>	
		<if test="uid != null and uid !=''"> and u_id= #{uid}</if>
		<if test="userId != null"> and user_id= #{userId}</if>	
		<if test="userFlag != null"> and user_flag= #{userFlag}</if>	
		<if test="content != null and content !=''"> and content= #{content}</if>
		<if test="createTime != null"> and create_time= #{createTime}</if>	
		<if test="isDelete != null"> and is_delete= #{isDelete}</if>	
		<if test="lessId != null"> and id &lt; #{lessId} </if>
	</sql>
	<sql id="Base_Column_List">
		id ,
		u_id ,
		user_id ,
		user_flag ,
		content ,
		create_time ,
		is_delete 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from himi_chat_record
		where
		id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from himi_chat_record
		where
		id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.hnair.consumer.user.model.HimiChatRecord" useGeneratedKeys="true" keyProperty="id">
		insert into himi_chat_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>	
			<if test="uid != null and uid !=''">u_id,</if>
			<if test="userId != null">user_id,</if>	
			<if test="userFlag != null">user_flag,</if>	
			<if test="content != null and content !=''">content,</if>
			<if test="createTime != null">create_time,</if>	
			<if test="isDelete != null">is_delete,</if>	
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="uid != null and uid !=''">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="userFlag != null">
				#{userFlag,jdbcType=INTEGER},
			</if>
			<if test="content != null and content !=''">
				#{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.hnair.consumer.user.model.HimiChatRecord">
		update himi_chat_record
		<set>
			<if test="uid != null and uid !=''">
				u_id= #{uid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id= #{userId,jdbcType=BIGINT},
			</if>
			<if test="userFlag != null">
				user_flag= #{userFlag,jdbcType=INTEGER},
			</if>
			<if test="content != null and content !=''">
				content= #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="createTime != null">
				create_time= #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				is_delete= #{isDelete,jdbcType=INTEGER}
			</if>
		</set>
		where
		id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from himi_chat_record where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from himi_chat_record where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from himi_chat_record where 1=1
		<include refid="Base_Where" />
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from himi_chat_record where id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>	
	</select>

	<select id="getHistoryRecord" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from himi_chat_record where 1=1
		<include refid="Base_Where" /> order by id desc LIMIT 0, #{pageSize}
	</select>

</mapper>
