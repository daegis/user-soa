<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserBlackListMapper">
	<resultMap id="BaseResultMap" type="com.hnair.consumer.user.model.UserBlackList">
		<id column="black_list_id" property="blackListId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="ban_user_id" property="banUserId" jdbcType="BIGINT" />
		<result column="is_del" property="isDel" jdbcType="TINYINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Where">
		<if test="blackListId != null"> and black_list_id= #{blackListId}</if>	
		<if test="userId != null"> and user_id= #{userId}</if>	
		<if test="banUserId != null"> and ban_user_id= #{banUserId}</if>	
		<if test="isDel != null"> and is_del= #{isDel}</if>	
		<if test="createTime != null"> and create_time= #{createTime}</if>	
		<if test="lastModifyTime != null"> and last_modify_time= #{lastModifyTime}</if>	
		<if test="idLess != null"><![CDATA[ and black_list_id<#{idLess}]]></if>	
		<if test="orderById != null"> order by black_list_id desc </if>
		<if test="pageSize != null"> limit #{pageSize}</if>
	</sql>
	<sql id="Base_Column_List">
		black_list_id ,
		user_id ,
		ban_user_id ,
		is_del ,
		create_time ,
		last_modify_time 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_black_list
		where
		black_list_id = #{blackListId,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_black_list
		where
		black_list_id = #{blackListId,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.hnair.consumer.user.model.UserBlackList">
		insert into user_black_list
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="blackListId != null">black_list_id,</if>	
			<if test="userId != null">user_id,</if>	
			<if test="banUserId != null">ban_user_id,</if>	
			<if test="isDel != null">is_del,</if>	
			<if test="createTime != null">create_time,</if>	
			<if test="lastModifyTime != null">last_modify_time,</if>	
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="blackListId != null">
				#{blackListId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="banUserId != null">
				#{banUserId,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastModifyTime != null">
				#{lastModifyTime,jdbcType=TIMESTAMP},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.hnair.consumer.user.model.UserBlackList">
		update user_black_list
		<set>
			<if test="userId != null">
				user_id= #{userId,jdbcType=BIGINT},
			</if>
			<if test="banUserId != null">
				ban_user_id= #{banUserId,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				is_del= #{isDel,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				create_time= #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastModifyTime != null">
				last_modify_time= #{lastModifyTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where
		black_list_id = #{blackListId,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from user_black_list where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from user_black_list where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from user_black_list where 1=1
		<include refid="Base_Where" />
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_black_list where black_list_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

</mapper>
