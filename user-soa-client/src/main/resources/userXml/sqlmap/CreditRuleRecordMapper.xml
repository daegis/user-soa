<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CreditRuleRecordMapper">
	<resultMap id="BaseResultMap" type="com.hnair.consumer.user.model.CreditRuleRecord">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="rule_type" property="ruleType" jdbcType="INTEGER" />
		<result column="owner_type" property="ownerType" jdbcType="INTEGER" />
		<result column="update_by" property="updateBy" jdbcType="BIGINT" />
		<result column="update_name" property="updateName" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Where">
		<if test="id != null"> and id= #{id}</if>	
		<if test="ruleType != null"> and rule_type= #{ruleType}</if>	
		<if test="ownerType != null"> and owner_type= #{ownerType}</if>	
		<if test="updateBy != null"> and update_by= #{updateBy}</if>	
		<if test="updateName != null and updateName !=''"> and update_name= #{updateName}</if>
		<if test="updateTime != null"> and update_time= #{updateTime}</if>	
	</sql>
	<sql id="Base_Column_List">
		id ,
		rule_type ,
		owner_type ,
		update_by ,
		update_name ,
		update_time 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from credit_rule_record
		where
		id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from credit_rule_record
		where
		id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.hnair.consumer.user.model.CreditRuleRecord">
		insert into credit_rule_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>	
			<if test="ruleType != null">rule_type,</if>	
			<if test="ownerType != null">owner_type,</if>	
			<if test="updateBy != null">update_by,</if>	
			<if test="updateName != null and updateName !=''">update_name,</if>
			<if test="updateTime != null">update_time,</if>	
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="ruleType != null">
				#{ruleType,jdbcType=INTEGER},
			</if>
			<if test="ownerType != null">
				#{ownerType,jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=BIGINT},
			</if>
			<if test="updateName != null and updateName !=''">
				#{updateName,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.hnair.consumer.user.model.CreditRuleRecord">
		update credit_rule_record
		<set>
			<if test="ruleType != null">
				rule_type= #{ruleType,jdbcType=INTEGER},
			</if>
			<if test="ownerType != null">
				owner_type= #{ownerType,jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				update_by= #{updateBy,jdbcType=BIGINT},
			</if>
			<if test="updateName != null and updateName !=''">
				update_name= #{updateName,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time= #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where
		id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from credit_rule_record where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from credit_rule_record where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from credit_rule_record where 1=1
		<include refid="Base_Where" />
		order by update_time desc
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from credit_rule_record where id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>



</mapper>
